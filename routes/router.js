const express = require("express");
const router = express.Router();

const utils = require("../utils/utils");
const vulnerabilityAlerts = require("../utils/vulnerability-alerts");

const lighthouseConfig = {
  extends: "lighthouse:default",
  settings: {
    emulatedFormFactor: "desktop",
    throttling: {
      // see https://github.com/GoogleChrome/lighthouse/blob/ee7cb3ba9371428b71d4a7b3696525712a32f7d2/lighthouse-core/config/lr-desktop-config.js
      rttMs: 40,
      throughputKbps: 10 * 1024,
      cpuSlowdownMultiplier: 1
    },
    onlyAudits: ["no-vulnerable-libraries", "js-libraries"]
  }
};
const opts = {
  chromeFlags: ["--headless", "--no-sandbox", "--disable-gpu"]
};

router.get("/", (req, res) => {
  res.send("<h1>I am alive!</h1>");
});

router.post("/test", (req, res) => {
  let websiteURL = req.body.url;
  /* If the URL does not already contain the protocol,
       automatically prepend `https://` */
  if (!websiteURL.match(/http|https/g)) {
    websiteURL = `https://${websiteURL}`;
  }

  // ensure that we have received a valid URL
  let validationResult = utils.validate(websiteURL);
  if (validationResult && validationResult.invalid) {
    res.json(validationResult);
    return;
  }

  vulnerabilityAlerts
    .launchAndTest(websiteURL, opts, lighthouseConfig)
    .then(results => {
      res.json(JSON.parse(results));
    });
});

module.exports = router;
